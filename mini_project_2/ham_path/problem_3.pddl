(define (problem ham-path-3)
    (:domain ham-path)
    (:metric minimize (total-cost))
    (:objects a b c d e f g h i j k)
    (:init (edge a b) (edge a d) (edge a e)
           (edge b c) (edge b f) (edge b i) (edge b a)
           (edge c b) (edge c d) (edge c k)
           (edge d a) (edge d g) (edge d j) (edge d c)
           (edge e a) (edge e f) (edge e g)
           (edge f e) (edge f b) (edge f h)
           (edge g e) (edge g d) (edge g h)
           (edge h g) (edge h f) (edge h i) (edge h j)
           (edge i b) (edge i k) (edge i h)
           (edge j d) (edge j k) (edge j h)
           (edge k i) (edge k c) (edge k j)
           (at a)
           (visited a)
           
           (= (edge-cost a b) 5)
           (= (edge-cost b c) 5)
           
           (= (edge-cost a d) 5)
           (= (edge-cost d a) 5)
    )
    (:goal (and (visited a)
                (visited b)
                (visited c)
                (visited d)
                (visited e)
                (visited f)
                (visited g)
                (visited h)
                (visited i)
                (visited j)
                (visited k)
           )
    )
)